{
   "openapi":"3.1.0",
   "info":{
      "title":"Reprompt API v2 (by Reprompt, an API Company)",
      "description":"Simplified API",
      "version":"2.0"
   },
   "servers":[
      {
         "url":"https://reprompt--reprompt-fastapi-fastapi-app-dev.us-west.modal.run/v2",
         "description":"V2 API server"
      }
   ],
   "paths":{
      "/enrich":{
         "post":{
            "tags":[
               "v2-enrichment"
            ],
            "summary":"Enrich",
            "description":"The single V2 endpoint for all enrichment needs.\n\nFeatures:\n- BYPASSED: Rate limiting and credit management disabled\n- Direct processing without database dependencies",
            "operationId":"enrich_enrich_post",
            "security":[
               {
                  "HTTPBearer":[
                     
                  ]
               }
            ],
            "parameters":[
               {
                  "name":"apiKey",
                  "in":"header",
                  "required":false,
                  "schema":{
                     "anyOf":[
                        {
                           "type":"string"
                        },
                        {
                           "type":"null"
                        }
                     ],
                     "title":"Apikey"
                  }
               }
            ],
            "requestBody":{
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/V2EnrichRequest"
                     },
                     "examples":{
                        "place_enrichment":{
                           "summary":"Enrich place with attribute",
                           "value":{
                              "inputs":{
                                 "name":"Joe's Pizza",
                                 "latitude":40.7359,
                                 "longitude":-73.9911,
                                 "full_address":"7 Carmine St, New York, NY 10014"
                              },
                              "attribute_key":"closed_permanently"
                           }
                        },
                        "reverse_geocode":{
                           "summary":"Reverse geocode coordinates",
                           "value":{
                              "inputs":{
                                 "latitude":40.7359,
                                 "longitude":-73.9911
                              },
                              "attribute_key":"reverse_geocode"
                           }
                        },
                        "forward_geocode":{
                           "summary":"Forward geocode address",
                           "value":{
                              "inputs":{
                                 "query":"123 Main St, New York, NY 10001"
                              },
                              "attribute_key":"forward_geocode"
                           }
                        },
                        "test_attribute":{
                           "summary":"Test attribute for debugging",
                           "value":{
                              "inputs":{
                                 "name":"Test Place",
                                 "latitude":40.7359,
                                 "longitude":-73.9911
                              },
                              "attribute_key":"test_attribute"
                           }
                        },
                        "test_api_attribute":{
                           "summary":"Test API attribute with HTTP call",
                           "value":{
                              "inputs":{
                                 "test_query":"Test Query"
                              },
                              "attribute_key":"test_api_attribute"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           
                        }
                     }
                  }
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/attributes":{
         "get":{
            "tags":[
               "v2-enrichment"
            ],
            "summary":"List Attributes",
            "description":"List available attributes and their costs",
            "operationId":"list_attributes_attributes_get",
            "security":[
               {
                  "HTTPBearer":[
                     
                  ]
               }
            ],
            "parameters":[
               {
                  "name":"apiKey",
                  "in":"header",
                  "required":false,
                  "schema":{
                     "anyOf":[
                        {
                           "type":"string"
                        },
                        {
                           "type":"null"
                        }
                     ],
                     "title":"Apikey"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/V2AttributesResponse"
                        }
                     }
                  }
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/find_places":{
         "get":{
            "tags":[
               "v2-enrichment"
            ],
            "summary":"Find Places",
            "description":"Find places near a point. Returns places in UniversalPlace schema matching placematch format.",
            "operationId":"find_places_find_places_get",
            "security":[
               {
                  "HTTPBearer":[
                     
                  ]
               }
            ],
            "parameters":[
               {
                  "name":"lat",
                  "in":"query",
                  "required":true,
                  "schema":{
                     "type":"number",
                     "description":"Latitude for the search center",
                     "title":"Lat"
                  },
                  "description":"Latitude for the search center"
               },
               {
                  "name":"long",
                  "in":"query",
                  "required":true,
                  "schema":{
                     "type":"number",
                     "description":"Longitude for the search center",
                     "title":"Long"
                  },
                  "description":"Longitude for the search center"
               },
               {
                  "name":"radius",
                  "in":"query",
                  "required":false,
                  "schema":{
                     "anyOf":[
                        {
                           "type":"number"
                        },
                        {
                           "type":"null"
                        }
                     ],
                     "description":"Optional radius in meters for the search area",
                     "title":"Radius"
                  },
                  "description":"Optional radius in meters for the search area"
               },
               {
                  "name":"geometry",
                  "in":"query",
                  "required":false,
                  "schema":{
                     "anyOf":[
                        {
                           "type":"string"
                        },
                        {
                           "type":"null"
                        }
                     ],
                     "description":"Optional GeoJSON geometry (FeatureCollection or Feature) as a JSON string",
                     "title":"Geometry"
                  },
                  "description":"Optional GeoJSON geometry (FeatureCollection or Feature) as a JSON string"
               },
               {
                  "name":"categories",
                  "in":"query",
                  "required":false,
                  "schema":{
                     "anyOf":[
                        {
                           "type":"array",
                           "items":{
                              "type":"string"
                           }
                        },
                        {
                           "type":"null"
                        }
                     ],
                     "description":"Optional list of categories to bias the search",
                     "title":"Categories"
                  },
                  "description":"Optional list of categories to bias the search"
               },
               {
                  "name":"query",
                  "in":"query",
                  "required":false,
                  "schema":{
                     "anyOf":[
                        {
                           "type":"string"
                        },
                        {
                           "type":"null"
                        }
                     ],
                     "description":"Optional free-form search query",
                     "title":"Query"
                  },
                  "description":"Optional free-form search query"
               },
               {
                  "name":"apiKey",
                  "in":"header",
                  "required":false,
                  "schema":{
                     "anyOf":[
                        {
                           "type":"string"
                        },
                        {
                           "type":"null"
                        }
                     ],
                     "title":"Apikey"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/routers__find_places_service__FindPlacesResponse"
                        }
                     }
                  }
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/place-existence":{
         "post":{
            "tags":[
               "v2-enrichment"
            ],
            "summary":"Place Existence",
            "description":"Place Existence Endpoint\n\nAnalyzes a place to determine if it exists and has digital footprint.\n\nTakes a natural language query like \"Starbucks Market and 8th st san francisco\" and performs \nanalysis to determine:\n\n- Digital Footprint: Web presence, social media, official websites, and online mentions\n- Entity Type: Whether it's a place, address, name only, geographic area, or other\n- Place Definition: Type of place (residential, temporary event, digital business, etc.)\n- Place Reality: Evidence of existence at the specified address\n\nAnalysis Process: Our system conducts web search and analysis to determine the digital \npresence and existence verification of the specified place.",
            "operationId":"place_existence_place_existence_post",
            "security":[
               {
                  "HTTPBearer":[
                     
                  ]
               }
            ],
            "parameters":[
               {
                  "name":"apiKey",
                  "in":"header",
                  "required":false,
                  "schema":{
                     "anyOf":[
                        {
                           "type":"string"
                        },
                        {
                           "type":"null"
                        }
                     ],
                     "title":"Apikey"
                  }
               }
            ],
            "requestBody":{
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/V2PlaceExistenceRequest"
                     },
                     "examples":{
                        "starbucks_example":{
                           "summary":"Starbucks location query",
                           "value":{
                              "query":"Starbucks Market and 8th st san francisco"
                           }
                        },
                        "pizza_example":{
                           "summary":"Pizza place query",
                           "value":{
                              "query":"Joe's Pizza Greenwich Village NYC"
                           }
                        },
                        "apple_store_example":{
                           "summary":"Apple Store with full address",
                           "value":{
                              "query":"Apple Store 1 Stockton St San Francisco CA"
                           }
                        },
                        "mcdonalds_example":{
                           "summary":"McDonald's Times Square",
                           "value":{
                              "query":"McDonald's Times Square Manhattan"
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Successful Response",
                  "content":{
                     "application/json":{
                        "schema":{
                           
                        }
                     }
                  }
               },
               "422":{
                  "description":"Validation Error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/HTTPValidationError"
                        }
                     }
                  }
               }
            }
         }
      },
      "/placematch":{
         "post":{
            "tags":[
               "v2-enrichment",
               "places"
            ],
            "summary":"Placematch Endpoint",
            "description":"Match a place against multiple geospatial data sources using AI-powered conflation algorithms.\n\nThis endpoint helps you find corresponding places across different databases for data cleaning,\nlocation matching, and deduplication. It uses sophisticated matching that considers name similarity,\ngeographic proximity, and category matching.\n\n**Input Modes:**\n- **Name-only**: Provide `place.name` for ambiguous/fuzzy matching (e.g., \"central park nyc\")\n- **Coordinates-only**: Provide `place.latitude` + `place.longitude` for location-based matching\n- **Precise matching**: Provide `place.name` + `place.address` + coordinates for most accurate results\n\n**Supported Sources:**\n- **reprompt**: Reprompt's proprietary place database (always included by default)\n- **overture**: Overture Maps Foundation open data\n- **foursquare**: Foursquare Places API data\n- **byod**: Match against your own data candidates\n\n**Key Use Cases:**\n1. **Data cleaning**: Clean messy/inconsistent place data against authoritative sources\n2. **Location matching**: Match user coordinates against your proprietary POI database\n3. **Deduplication**: Find duplicate places across different datasets\n\n**Matching considers:**\n- Name similarity and normalization\n- Geographic proximity and distance\n- Category/type alignment\n- Address components\n- Geographic context when minimal info provided\n\n**Response includes:**\n- Matched places as GeoJSON features\n- Confidence scores and match explanations\n- Detailed conflation metadata\n- Search operation metadata",
            "operationId":"placematch_endpoint_placematch_post",
            "security":[
               {
                  "HTTPBearer":[
                     
                  ]
               }
            ],
            "parameters":[
               {
                  "name":"apiKey",
                  "in":"header",
                  "required":false,
                  "schema":{
                     "anyOf":[
                        {
                           "type":"string"
                        },
                        {
                           "type":"null"
                        }
                     ],
                     "title":"Apikey"
                  }
               }
            ],
            "requestBody":{
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/PlacematchRequest"
                     },
                     "examples":{
                        "simple_name_search":{
                           "summary":"Simple name search (default sources)",
                           "description":"Basic name search using default reprompt source",
                           "value":{
                              "place":{
                                 "name":"central park nyc"
                              }
                           }
                        },
                        "name_search_multiple_sources":{
                           "summary":"Name search with multiple sources",
                           "description":"Ambiguous query-like search across multiple sources (reprompt automatically included)",
                           "value":{
                              "place":{
                                 "name":"central park nyc"
                              },
                              "match_sources":[
                                 "overture",
                                 "foursquare"
                              ],
                              "max_matches":3,
                              "radius":900
                           }
                        },
                        "coordinates_search":{
                           "summary":"Search by coordinates only",
                           "description":"Location-based search using only latitude and longitude",
                           "value":{
                              "place":{
                                 "latitude":40.7829,
                                 "longitude":-73.9654
                              },
                              "match_sources":[
                                 "foursquare",
                                 "overture"
                              ],
                              "max_matches":5
                           }
                        },
                        "precise_matching":{
                           "summary":"Precise matching with name+address+coordinates",
                           "description":"Most precise matching mode using all available place information",
                           "value":{
                              "place":{
                                 "name":"Starbucks",
                                 "address":"1585 Broadway, New York, NY 10036",
                                 "latitude":40.7614327,
                                 "longitude":-73.9776216
                              },
                              "match_sources":[
                                 "reprompt",
                                 "overture"
                              ],
                              "max_matches":3
                           }
                        },
                        "user_location_vs_your_data":{
                           "summary":"Match user location against your own data",
                           "description":"Mobile app scenario: User is at a location, match against your proprietary POI database",
                           "value":{
                              "place":{
                                 "latitude":37.7749,
                                 "longitude":-122.4194
                              },
                              "match_sources":[
                                 "byod"
                              ],
                              "match_byod_candidates":[
                                 {
                                    "name":"Blue Bottle Coffee",
                                    "latitude":37.775,
                                    "longitude":-122.4195
                                 },
                                 {
                                    "name":"Ritual Coffee Roasters",
                                    "latitude":37.7748,
                                    "longitude":-122.4193
                                 },
                                 {
                                    "name":"Philz Coffee",
                                    "latitude":37.7751,
                                    "longitude":-122.4192
                                 }
                              ],
                              "radius":100,
                              "max_results":3
                           }
                        },
                        "messy_data_overture":{
                           "summary":"Match messy data with Overture",
                           "description":"Data cleaning scenario: Messy name-based search matched against Overture Maps",
                           "value":{
                              "place":{
                                 "name":"mcdonalds times square manhattan"
                              },
                              "match_sources":[
                                 "overture"
                              ],
                              "max_matches":5,
                              "radius":200
                           }
                        },
                        "safegraph_to_reprompt":{
                           "summary":"Match SafeGraph data against Reprompt",
                           "description":"Real SafeGraph data example: Match one POI from SafeGraph against Reprompt's database",
                           "value":{
                              "place":{
                                 "name":"Havenwood Nursing Home",
                                 "address":"1821 Grove St, Marysville, WA",
                                 "latitude":48.061574,
                                 "longitude":-122.169605
                              },
                              "match_sources":[
                                 "reprompt"
                              ],
                              "max_matches":3,
                              "radius":50
                           }
                        },
                        "safegraph_data_conflation":{
                           "summary":"Match SafeGraph data using BYOD",
                           "description":"Full SafeGraph data example: Match location against SafeGraph POI candidates to find best match",
                           "value":{
                              "place":{
                                 "latitude":48.061734,
                                 "longitude":-122.169543
                              },
                              "match_sources":[
                                 "byod"
                              ],
                              "match_byod_candidates":[
                                 {
                                    "name":"Havenwood Nursing Home",
                                    "address":"1821 Grove St",
                                    "latitude":48.061574,
                                    "longitude":-122.169605
                                 },
                                 {
                                    "name":"Mrs. Kathleen Peterson Otr/l",
                                    "address":"1821 Grove St",
                                    "latitude":48.061565,
                                    "longitude":-122.169579
                                 },
                                 {
                                    "name":"Life Care Centers of America",
                                    "address":"1821 Grove St",
                                    "latitude":48.061564,
                                    "longitude":-122.169587
                                 },
                                 {
                                    "name":"Marysville Care Center",
                                    "address":"1821 Grove St",
                                    "latitude":48.061557,
                                    "longitude":-122.169582
                                 },
                                 {
                                    "name":"Dr. Ryan Mccann PT, Dpt",
                                    "address":"1821 Grove St",
                                    "latitude":48.061793,
                                    "longitude":-122.169842
                                 },
                                 {
                                    "name":"Amanda Mcswain Dpt",
                                    "address":"1821 Grove St",
                                    "latitude":48.06181,
                                    "longitude":-122.169857
                                 },
                                 {
                                    "name":"Mrs. Melody Watson PT",
                                    "address":"1821 Grove St",
                                    "latitude":48.061793,
                                    "longitude":-122.169883
                                 },
                                 {
                                    "name":"Erin Melcher MS, Otr/l",
                                    "address":"1821 Grove St",
                                    "latitude":48.061992,
                                    "longitude":-122.169744
                                 }
                              ],
                              "max_matches":5,
                              "radius":50
                           }
                        },
                        "match_against_your_own_data":{
                           "summary":"Match against your own data",
                           "value":{
                              "place":{
                                 "name":"Joe's Coffee"
                              },
                              "match_sources":[
                                 "byod",
                                 "foursquare"
                              ],
                              "match_byod_candidates":[
                                 {
                                    "name":"Joe's Coffee Shop",
                                    "latitude":40.759,
                                    "longitude":-73.985
                                 },
                                 {
                                    "name":"Joey's Cafe",
                                    "latitude":40.7588,
                                    "longitude":-73.9852
                                 }
                              ]
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Successfully matched places",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/PlacematchResponse"
                        },
                        "examples":{
                           "user_location_match":{
                              "summary":"User location matched to BYOD",
                              "value":{
                                 "type":"FeatureCollection",
                                 "features":[
                                    {
                                       "type":"Feature",
                                       "geometry":{
                                          "type":"Point",
                                          "coordinates":[
                                             -122.4195,
                                             37.775
                                          ]
                                       },
                                       "properties":{
                                          "name":"Blue Bottle Coffee",
                                          "address":"315 Linden St, San Francisco, CA 94102",
                                          "category":"coffee_shop",
                                          "phone":"+14158964500",
                                          "source":"byod",
                                          "confidence_score":0.95,
                                          "is_match":true,
                                          "match_explanation":"High confidence match: very close location (12m away) with precise GPS coordinates",
                                          "conflation_score_location":0.98,
                                          "conflation_score_name":0.92,
                                          "conflation_weight_location":0.35,
                                          "conflation_weight_name":0.4
                                       }
                                    }
                                 ],
                                 "metadata":{
                                    "total_results":1,
                                    "sources_searched":[
                                       "byod"
                                    ],
                                    "search_radius_meters":100,
                                    "query_coordinates":[
                                       -122.4194,
                                       37.7749
                                    ],
                                    "processing_time_ms":45
                                 }
                              }
                           },
                           "messy_data_cleaned":{
                              "summary":"Messy data matched to Overture",
                              "value":{
                                 "type":"FeatureCollection",
                                 "features":[
                                    {
                                       "type":"Feature",
                                       "geometry":{
                                          "type":"Point",
                                          "coordinates":[
                                             -73.9851,
                                             40.7589
                                          ]
                                       },
                                       "properties":{
                                          "name":"McDonald's",
                                          "address":"1528 Broadway, New York, NY 10036",
                                          "category":"fast_food",
                                          "categories":[
                                             "fast_food",
                                             "restaurant"
                                          ],
                                          "source":"overture",
                                          "confidence_score":0.87,
                                          "is_match":true,
                                          "match_explanation":"Good match: normalized name similarity and location within acceptable range",
                                          "conflation_score_name":0.85,
                                          "conflation_score_location":0.89,
                                          "conflation_score_category":0.92
                                       }
                                    }
                                 ],
                                 "metadata":{
                                    "total_results":1,
                                    "sources_searched":[
                                       "overture"
                                    ],
                                    "search_radius_meters":200,
                                    "query_coordinates":[
                                       -73.98513,
                                       40.758896
                                    ],
                                    "processing_time_ms":180
                                 }
                              }
                           },
                           "safegraph_enriched":{
                              "summary":"SafeGraph data enriched via Reprompt",
                              "value":{
                                 "type":"FeatureCollection",
                                 "features":[
                                    {
                                       "type":"Feature",
                                       "geometry":{
                                          "type":"Point",
                                          "coordinates":[
                                             -73.9776216,
                                             40.7614327
                                          ]
                                       },
                                       "properties":{
                                          "name":"Starbucks",
                                          "address":"1585 Broadway, New York, NY 10036",
                                          "category":"coffee_shop",
                                          "categories":[
                                             "coffee_shop",
                                             "cafe"
                                          ],
                                          "website":"https://www.starbucks.com",
                                          "phone":"+12127307621",
                                          "id":"reprompt:poi:starbucks_1585_broadway",
                                          "source":"reprompt",
                                          "confidence_score":0.98,
                                          "is_match":true,
                                          "match_explanation":"Exact match: perfect name, address, and coordinate alignment with enhanced data quality",
                                          "conflation_score_name":1.0,
                                          "conflation_score_location":0.99,
                                          "conflation_score_category":0.95,
                                          "conflation_weight_name":0.4,
                                          "conflation_weight_location":0.35,
                                          "conflation_weight_category":0.25
                                       }
                                    }
                                 ],
                                 "metadata":{
                                    "total_results":1,
                                    "sources_searched":[
                                       "reprompt"
                                    ],
                                    "search_radius_meters":50,
                                    "query_coordinates":[
                                       -73.9776216,
                                       40.7614327
                                    ],
                                    "processing_time_ms":120
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid input or validation error",
                  "content":{
                     "application/json":{
                        "examples":{
                           "missing_input_error":{
                              "summary":"No input provided",
                              "value":{
                                 "error":"validation_error",
                                 "message":"Must provide at least a name OR coordinates",
                                 "details":{
                                    
                                 }
                              }
                           },
                           "incomplete_coordinates_error":{
                              "summary":"Only latitude or longitude provided",
                              "value":{
                                 "error":"validation_error",
                                 "message":"Both latitude and longitude must be provided together",
                                 "details":{
                                    
                                 }
                              }
                           },
                           "address_without_name_error":{
                              "summary":"Address provided without name",
                              "value":{
                                 "error":"validation_error",
                                 "message":"Address can only be provided together with a name",
                                 "details":{
                                    "suggestion":"Include place.name when providing place.address"
                                 }
                              }
                           }
                        },
                        "schema":{
                           "$ref":"#/components/schemas/PlacematchErrorResponse"
                        }
                     }
                  }
               },
               "422":{
                  "description":"Geocoding failed or processing error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/PlacematchErrorResponse"
                        }
                     }
                  }
               },
               "502":{
                  "description":"External service error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/PlacematchErrorResponse"
                        }
                     }
                  }
               },
               "504":{
                  "description":"Request timeout",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/PlacematchErrorResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/find_places/search":{
         "post":{
            "tags":[
               "find-places"
            ],
            "summary":"Find Places",
            "description":"Find places in a defined area with optional name/category filters.\n\n- Authentication: send Authorization: Bearer <API_KEY> (or apiKey/X-API-Key)\n- Provide exactly one location filter: lat/lon (+ optional radius), GeoJSON polygon, locality+country, postal_code+country, or region+country\n- Optional filters: names (string or list), categories (snake_case string or list)\n- Returns up to 500 results. For lat/lon searches, `distance_m` is included and results are sorted by distance, then name. For area searches, results are sorted by name.",
            "operationId":"find_places_find_places_search_post",
            "security":[
               {
                  "HTTPBearer":[
                     
                  ]
               }
            ],
            "parameters":[
               {
                  "name":"apiKey",
                  "in":"header",
                  "required":false,
                  "schema":{
                     "anyOf":[
                        {
                           "type":"string"
                        },
                        {
                           "type":"null"
                        }
                     ],
                     "title":"Apikey"
                  }
               }
            ],
            "requestBody":{
               "required":true,
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/FindPlacesRequest"
                     },
                     "examples":{
                        "lat_lon_radius":{
                           "summary":"Search near coordinates",
                           "value":{
                              "location_filter":{
                                 "latitude":37.7749,
                                 "longitude":-122.4194,
                                 "radius":1000
                              },
                              "names":[
                                 "Starbucks"
                              ],
                              "categories":[
                                 "cafe"
                              ]
                           }
                        },
                        "geometry_polygon":{
                           "summary":"Search within polygon",
                           "value":{
                              "location_filter":{
                                 "geometry":{
                                    "type":"Polygon",
                                    "coordinates":[
                                       [
                                          [
                                             -122.4194,
                                             37.7749
                                          ],
                                          [
                                             -122.4094,
                                             37.7749
                                          ],
                                          [
                                             -122.4094,
                                             37.7849
                                          ],
                                          [
                                             -122.4194,
                                             37.7849
                                          ],
                                          [
                                             -122.4194,
                                             37.7749
                                          ]
                                       ]
                                    ]
                                 }
                              },
                              "categories":[
                                 "restaurant"
                              ]
                           }
                        },
                        "locality":{
                           "summary":"Search within a city",
                           "value":{
                              "location_filter":{
                                 "locality":"San Francisco",
                                 "country_code":"US"
                              },
                              "names":"Coffee Shop"
                           }
                        },
                        "postal_code":{
                           "summary":"Search within a postal code",
                           "value":{
                              "location_filter":{
                                 "postal_code":"94102",
                                 "country_code":"US"
                              },
                              "categories":[
                                 "retail"
                              ]
                           }
                        },
                        "region":{
                           "summary":"Search within a state/region",
                           "value":{
                              "location_filter":{
                                 "region":"CA",
                                 "country_code":"US"
                              },
                              "categories":[
                                 "hospital"
                              ]
                           }
                        }
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Successfully found places",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/find_places__service__FindPlacesResponse"
                        },
                        "examples":{
                           "nearby_results":{
                              "summary":"Results near coordinates (includes distance_m)",
                              "value":{
                                 "results":[
                                    {
                                       "place_id":"plc_123",
                                       "name":"Blue Bottle Coffee",
                                       "full_address":"315 Linden St, San Francisco, CA 94102",
                                       "latitude":37.775,
                                       "longitude":-122.4195,
                                       "category_primary":"coffee_shop",
                                       "category_alternates":[
                                          "cafe"
                                       ],
                                       "phone_number":"+14158964500",
                                       "website":"https://bluebottlecoffee.com",
                                       "open_status":"Open",
                                       "distance_m":85.2
                                    }
                                 ],
                                 "metadata":{
                                    "version":"v0.1.0"
                                 }
                              }
                           },
                           "polygon_results":{
                              "summary":"Results within polygon (no distance_m)",
                              "value":{
                                 "results":[
                                    {
                                       "place_id":"plc_456",
                                       "name":"McDonald's",
                                       "full_address":"1528 Broadway, New York, NY 10036",
                                       "latitude":40.7589,
                                       "longitude":-73.9851,
                                       "category_primary":"fast_food",
                                       "category_alternates":[
                                          "restaurant"
                                       ],
                                       "open_status":"Open"
                                    }
                                 ],
                                 "metadata":{
                                    "version":"v0.1.0"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Invalid input or validation error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/FindPlacesErrorResponse"
                        }
                     }
                  }
               },
               "422":{
                  "description":"Processing error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/FindPlacesErrorResponse"
                        }
                     }
                  }
               },
               "502":{
                  "description":"External service error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/FindPlacesErrorResponse"
                        }
                     }
                  }
               },
               "500":{
                  "description":"Service not initialized or internal error",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/FindPlacesErrorResponse"
                        }
                     }
                  }
               }
            }
         }
      }
   },
   "components":{
      "schemas":{
         "AgentInput":{
            "properties":{
               "prompt":{
                  "type":"string",
                  "title":"Prompt",
                  "description":"Primary task prompt for the agent"
               },
               "intelligence":{
                  "type":"string",
                  "enum":[
                     "HIGH",
                     "MEDIUM",
                     "LOW"
                  ],
                  "title":"Intelligence",
                  "description":"Model strength and reasoning budget",
                  "default":"MEDIUM"
               },
               "option":{
                  "type":"string",
                  "enum":[
                     "standard",
                     "web_search",
                     "browser_access"
                  ],
                  "title":"Option",
                  "description":"Execution mode: standard LLM, LLM + web search, or browser access",
                  "default":"standard"
               },
               "output_schema":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Output Schema",
                  "description":"Optional JSON schema string for structured output"
               }
            },
            "type":"object",
            "required":[
               "prompt"
            ],
            "title":"AgentInput"
         },
         "FindPlacesErrorResponse":{
            "properties":{
               "error":{
                  "type":"string",
                  "title":"Error",
                  "description":"Short machine-readable error type"
               },
               "message":{
                  "type":"string",
                  "title":"Message",
                  "description":"Human-readable error message"
               },
               "details":{
                  "anyOf":[
                     {
                        "additionalProperties":true,
                        "type":"object"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Details",
                  "description":"Additional error details if available"
               }
            },
            "type":"object",
            "required":[
               "error",
               "message"
            ],
            "title":"FindPlacesErrorResponse",
            "description":"Error response schema for the Find Places API."
         },
         "FindPlacesMetadata":{
            "properties":{
               "version":{
                  "type":"string",
                  "title":"Version",
                  "description":"The API version used",
                  "default":"v0.1.0"
               }
            },
            "type":"object",
            "title":"FindPlacesMetadata",
            "description":"Metadata about the find places operation."
         },
         "FindPlacesRequest":{
            "properties":{
               "location_filter":{
                  "$ref":"#/components/schemas/LocationFilter",
                  "description":"Location filter (one of: lat/lon/radius, geometry, region, postal_code, locality)"
               },
               "names":{
                  "anyOf":[
                     {
                        "items":{
                           "type":"string"
                        },
                        "type":"array"
                     },
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Names",
                  "description":"Place name(s) to search for",
                  "examples":[
                     [
                        "Starbucks",
                        "Peet's Coffee"
                     ],
                     "Coffee Shop"
                  ]
               },
               "categories":{
                  "anyOf":[
                     {
                        "items":{
                           "type":"string"
                        },
                        "type":"array"
                     },
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Categories",
                  "description":"Category/categories to filter by",
                  "examples":[
                     [
                        "cafe",
                        "restaurant"
                     ],
                     "cafe"
                  ]
               }
            },
            "type":"object",
            "required":[
               "location_filter"
            ],
            "title":"FindPlacesRequest",
            "description":"Request body for finding places.\n\nExample requests:\n\n1. Search by lat/lon:\n{\n    \"location_filter\": {\n        \"latitude\": 37.7749,\n        \"longitude\": -122.4194,\n        \"radius\": 1000\n    },\n    \"names\": [\"Starbucks\", \"Peet's Coffee\"],\n    \"categories\": [\"cafe\"]\n}\n\n2. Search by geometry:\n{\n    \"location_filter\": {\n        \"geometry\": {\n            \"type\": \"Polygon\",\n            \"coordinates\": [[[-122.4194, 37.7749], ...]]\n        }\n    },\n    \"categories\": [\"restaurant\"]\n}\n\n3. Search by postal code:\n{\n    \"location_filter\": {\n        \"postal_code\": \"94102\",\n        \"country_code\": \"US\"\n    },\n    \"names\": \"Coffee Shop\"\n}"
         },
         "HTTPValidationError":{
            "properties":{
               "detail":{
                  "items":{
                     "$ref":"#/components/schemas/ValidationError"
                  },
                  "type":"array",
                  "title":"Detail"
               }
            },
            "type":"object",
            "title":"HTTPValidationError"
         },
         "LocationFilter":{
            "properties":{
               "latitude":{
                  "anyOf":[
                     {
                        "type":"number",
                        "maximum":90.0,
                        "minimum":-90.0
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Latitude",
                  "description":"Latitude coordinate",
                  "examples":[
                     37.7749
                  ]
               },
               "longitude":{
                  "anyOf":[
                     {
                        "type":"number",
                        "maximum":180.0,
                        "minimum":-180.0
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Longitude",
                  "description":"Longitude coordinate",
                  "examples":[
                     -122.4194
                  ]
               },
               "radius":{
                  "type":"integer",
                  "maximum":10000.0,
                  "minimum":0.0,
                  "title":"Radius",
                  "description":"Search radius in meters",
                  "default":500,
                  "examples":[
                     500,
                     1000
                  ]
               },
               "geometry":{
                  "anyOf":[
                     {
                        "additionalProperties":true,
                        "type":"object"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Geometry",
                  "description":"GeoJSON geometry object (Polygon, MultiPolygon, etc.)",
                  "examples":[
                     {
                        "coordinates":[
                           [
                              [
                                 -122.4194,
                                 37.7749
                              ],
                              [
                                 -122.4094,
                                 37.7749
                              ],
                              [
                                 -122.4094,
                                 37.7849
                              ],
                              [
                                 -122.4194,
                                 37.7849
                              ],
                              [
                                 -122.4194,
                                 37.7749
                              ]
                           ]
                        ],
                        "type":"Polygon"
                     }
                  ]
               },
               "region":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Region",
                  "description":"Region/state name",
                  "examples":[
                     "California",
                     "New York"
                  ]
               },
               "postal_code":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Postal Code",
                  "description":"Postal/ZIP code",
                  "examples":[
                     "94102",
                     "10001"
                  ]
               },
               "locality":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Locality",
                  "description":"City or town name",
                  "examples":[
                     "San Francisco",
                     "New York"
                  ]
               },
               "country_code":{
                  "anyOf":[
                     {
                        "type":"string",
                        "maxLength":2,
                        "minLength":2
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Country Code",
                  "description":"ISO 3166-1 alpha-2 country code",
                  "examples":[
                     "US",
                     "CA",
                     "GB"
                  ]
               }
            },
            "type":"object",
            "title":"LocationFilter",
            "description":"Location filter for place search.\n\nSupports multiple filter types (mutually exclusive):\n1. Lat/Lon/Radius: Provide latitude, longitude, and optionally radius (default 500m)\n2. Geometry: Provide geometry as GeoJSON object\n3. Region: Provide region and country_code\n4. Postal Code: Provide postal_code (and optionally country_code)\n5. Locality: Provide locality and country_code"
         },
         "PlaceInput":{
            "properties":{
               "name":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Name",
                  "description":"Name of the place"
               },
               "address":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Address",
                  "description":"Address of the place (for more precise matching)"
               },
               "latitude":{
                  "anyOf":[
                     {
                        "type":"number",
                        "maximum":90.0,
                        "minimum":-90.0
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Latitude",
                  "description":"Latitude coordinate"
               },
               "longitude":{
                  "anyOf":[
                     {
                        "type":"number",
                        "maximum":180.0,
                        "minimum":-180.0
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Longitude",
                  "description":"Longitude coordinate"
               }
            },
            "type":"object",
            "title":"PlaceInput",
            "description":"Place object input for placematch - supports coordinates-only, name-only, or name+address+coordinates."
         },
         "PlacematchErrorResponse":{
            "properties":{
               "error":{
                  "type":"string",
                  "title":"Error",
                  "description":"Error type"
               },
               "message":{
                  "type":"string",
                  "title":"Message",
                  "description":"Human-readable error message"
               },
               "details":{
                  "anyOf":[
                     {
                        "additionalProperties":true,
                        "type":"object"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Details",
                  "description":"Additional error details"
               }
            },
            "type":"object",
            "required":[
               "error",
               "message"
            ],
            "title":"PlacematchErrorResponse",
            "description":"Error response for placematch endpoint."
         },
         "PlacematchFeature":{
            "properties":{
               "type":{
                  "type":"string",
                  "const":"Feature",
                  "title":"Type",
                  "default":"Feature"
               },
               "geometry":{
                  "additionalProperties":true,
                  "type":"object",
                  "title":"Geometry",
                  "description":"GeoJSON Point geometry"
               },
               "properties":{
                  "$ref":"#/components/schemas/PlacematchFeatureProperties"
               }
            },
            "type":"object",
            "required":[
               "geometry",
               "properties"
            ],
            "title":"PlacematchFeature",
            "description":"GeoJSON Feature for a matched place."
         },
         "PlacematchFeatureProperties":{
            "properties":{
               "name":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Name"
               },
               "address":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Address"
               },
               "category":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Category"
               },
               "categories":{
                  "anyOf":[
                     {
                        "items":{
                           "type":"string"
                        },
                        "type":"array"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Categories"
               },
               "website":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Website"
               },
               "phone":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Phone"
               },
               "id":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Id"
               },
               "source":{
                  "type":"string",
                  "title":"Source"
               },
               "confidence_score":{
                  "type":"number",
                  "title":"Confidence Score",
                  "description":"Overall confidence score (0-1)"
               },
               "is_match":{
                  "type":"boolean",
                  "title":"Is Match",
                  "description":"Whether this is considered a confident match"
               },
               "match_explanation":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Match Explanation",
                  "description":"Human-readable explanation of the match"
               },
               "conflation_score_name":{
                  "anyOf":[
                     {
                        "type":"number"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Conflation Score Name"
               },
               "conflation_score_location":{
                  "anyOf":[
                     {
                        "type":"number"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Conflation Score Location"
               },
               "conflation_score_category":{
                  "anyOf":[
                     {
                        "type":"number"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Conflation Score Category"
               },
               "conflation_weight_name":{
                  "anyOf":[
                     {
                        "type":"number"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Conflation Weight Name"
               },
               "conflation_weight_location":{
                  "anyOf":[
                     {
                        "type":"number"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Conflation Weight Location"
               },
               "conflation_weight_category":{
                  "anyOf":[
                     {
                        "type":"number"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Conflation Weight Category"
               }
            },
            "type":"object",
            "required":[
               "source",
               "confidence_score",
               "is_match"
            ],
            "title":"PlacematchFeatureProperties",
            "description":"Properties of a matched place feature."
         },
         "PlacematchMetadata":{
            "properties":{
               "total_results":{
                  "type":"integer",
                  "title":"Total Results",
                  "description":"Total number of results returned"
               },
               "sources_searched":{
                  "items":{
                     "type":"string"
                  },
                  "type":"array",
                  "title":"Sources Searched",
                  "description":"Sources that were searched"
               },
               "search_radius_meters":{
                  "type":"number",
                  "title":"Search Radius Meters",
                  "description":"Search radius used"
               },
               "query_coordinates":{
                  "anyOf":[
                     {
                        "items":{
                           "type":"number"
                        },
                        "type":"array"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Query Coordinates",
                  "description":"Coordinates used for search [lon, lat]"
               },
               "processing_time_ms":{
                  "anyOf":[
                     {
                        "type":"integer"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Processing Time Ms",
                  "description":"Processing time in milliseconds"
               }
            },
            "type":"object",
            "required":[
               "total_results",
               "sources_searched",
               "search_radius_meters"
            ],
            "title":"PlacematchMetadata",
            "description":"Metadata about the placematch operation."
         },
         "PlacematchRequest":{
            "properties":{
               "place":{
                  "$ref":"#/components/schemas/PlaceInput",
                  "description":"Place to match (name-only, coordinates-only, or name+address+coordinates for most precise matching)"
               },
               "match_sources":{
                  "anyOf":[
                     {
                        "items":{
                           "$ref":"#/components/schemas/PlacematchSource"
                        },
                        "type":"array"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Match Sources",
                  "description":"Sources to search for matches (reprompt is always included by default)",
                  "default":[
                     "reprompt"
                  ]
               },
               "match_byod_candidates":{
                  "anyOf":[
                     {
                        "items":{
                           "$ref":"#/components/schemas/PlaceInput"
                        },
                        "type":"array",
                        "maxItems":50
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Match Byod Candidates",
                  "description":"Your own data candidates for matching (max 50)"
               },
               "max_matches":{
                  "anyOf":[
                     {
                        "type":"integer",
                        "maximum":10.0,
                        "minimum":1.0
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Max Matches",
                  "description":"Maximum matches per source",
                  "default":3
               },
               "radius":{
                  "anyOf":[
                     {
                        "type":"number",
                        "maximum":5000.0,
                        "minimum":50.0
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Radius",
                  "description":"Search radius in meters",
                  "default":900
               }
            },
            "type":"object",
            "required":[
               "place"
            ],
            "title":"PlacematchRequest",
            "description":"Request model for placematch endpoint."
         },
         "PlacematchResponse":{
            "properties":{
               "type":{
                  "type":"string",
                  "const":"FeatureCollection",
                  "title":"Type",
                  "default":"FeatureCollection"
               },
               "features":{
                  "items":{
                     "$ref":"#/components/schemas/PlacematchFeature"
                  },
                  "type":"array",
                  "title":"Features",
                  "description":"Array of matched place features"
               },
               "metadata":{
                  "$ref":"#/components/schemas/PlacematchMetadata",
                  "description":"Operation metadata"
               }
            },
            "type":"object",
            "required":[
               "features",
               "metadata"
            ],
            "title":"PlacematchResponse",
            "description":"Response model for placematch endpoint."
         },
         "PlacematchSource":{
            "type":"string",
            "enum":[
               "reprompt",
               "overture",
               "foursquare",
               "byod"
            ],
            "title":"PlacematchSource",
            "description":"Supported sources for place matching."
         },
         "V2AttributeDetails":{
            "properties":{
               "key":{
                  "type":"string",
                  "title":"Key"
               },
               "name":{
                  "type":"string",
                  "title":"Name"
               },
               "description":{
                  "type":"string",
                  "title":"Description"
               },
               "function_signatures":{
                  "items":{
                     "$ref":"#/components/schemas/V2AttributeFunctionSignature"
                  },
                  "type":"array",
                  "title":"Function Signatures"
               },
               "enrichment_type":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Enrichment Type"
               },
               "generic_api_config":{
                  "anyOf":[
                     {
                        "additionalProperties":true,
                        "type":"object"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Generic Api Config"
               },
               "icon":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Icon"
               }
            },
            "type":"object",
            "required":[
               "key",
               "name",
               "description",
               "function_signatures"
            ],
            "title":"V2AttributeDetails",
            "description":"Detailed information about a single attribute"
         },
         "V2AttributeFunctionSignature":{
            "properties":{
               "required_inputs":{
                  "items":{
                     "$ref":"#/components/schemas/V2InputField"
                  },
                  "type":"array",
                  "title":"Required Inputs"
               },
               "optional_inputs":{
                  "anyOf":[
                     {
                        "items":{
                           "$ref":"#/components/schemas/V2InputField"
                        },
                        "type":"array"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Optional Inputs"
               },
               "output_schema":{
                  "additionalProperties":true,
                  "type":"object",
                  "title":"Output Schema"
               },
               "example_output":{
                  "anyOf":[
                     {
                        "additionalProperties":true,
                        "type":"object"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Example Output"
               },
               "credit_cost":{
                  "type":"integer",
                  "title":"Credit Cost"
               }
            },
            "type":"object",
            "required":[
               "required_inputs",
               "output_schema",
               "credit_cost"
            ],
            "title":"V2AttributeFunctionSignature"
         },
         "V2AttributesResponse":{
            "properties":{
               "attributes":{
                  "items":{
                     "$ref":"#/components/schemas/V2AttributeDetails"
                  },
                  "type":"array",
                  "title":"Attributes"
               },
               "total_count":{
                  "type":"integer",
                  "title":"Total Count"
               }
            },
            "type":"object",
            "required":[
               "attributes",
               "total_count"
            ],
            "title":"V2AttributesResponse",
            "description":"Response for the /attributes endpoint"
         },
         "V2EnrichRequest":{
            "properties":{
               "inputs":{
                  "additionalProperties":true,
                  "type":"object",
                  "title":"Inputs"
               },
               "attribute_key":{
                  "type":"string",
                  "title":"Attribute Key"
               }
            },
            "type":"object",
            "required":[
               "inputs",
               "attribute_key"
            ],
            "title":"V2EnrichRequest",
            "description":"Main enrichment request"
         },
         "V2InputField":{
            "properties":{
               "name":{
                  "type":"string",
                  "title":"Name"
               },
               "type":{
                  "type":"string",
                  "title":"Type"
               },
               "description":{
                  "type":"string",
                  "title":"Description"
               },
               "example":{
                  "anyOf":[
                     {
                        
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Example"
               }
            },
            "type":"object",
            "required":[
               "name",
               "type",
               "description"
            ],
            "title":"V2InputField",
            "description":"Represents a single input field for an attribute"
         },
         "V2PlaceExistenceRequest":{
            "properties":{
               "query":{
                  "type":"string",
                  "title":"Query",
                  "description":"Natural language query like 'Starbucks Market and 8th st san francisco'"
               }
            },
            "type":"object",
            "required":[
               "query"
            ],
            "title":"V2PlaceExistenceRequest",
            "description":"Request model for place existence endpoint"
         },
         "ValidationError":{
            "properties":{
               "loc":{
                  "items":{
                     "anyOf":[
                        {
                           "type":"string"
                        },
                        {
                           "type":"integer"
                        }
                     ]
                  },
                  "type":"array",
                  "title":"Location"
               },
               "msg":{
                  "type":"string",
                  "title":"Message"
               },
               "type":{
                  "type":"string",
                  "title":"Error Type"
               }
            },
            "type":"object",
            "required":[
               "loc",
               "msg",
               "type"
            ],
            "title":"ValidationError"
         },
         "find_places__service__FindPlaceItem":{
            "properties":{
               "place_id":{
                  "type":"string",
                  "title":"Place Id",
                  "description":"The ID of the place"
               },
               "name":{
                  "type":"string",
                  "title":"Name",
                  "description":"The name of the place"
               },
               "full_address":{
                  "type":"string",
                  "title":"Full Address",
                  "description":"The full address of the place"
               },
               "latitude":{
                  "type":"number",
                  "maximum":90.0,
                  "minimum":-90.0,
                  "title":"Latitude",
                  "description":"The latitude of the place"
               },
               "longitude":{
                  "type":"number",
                  "maximum":180.0,
                  "minimum":-180.0,
                  "title":"Longitude",
                  "description":"The longitude of the place"
               },
               "category_primary":{
                  "type":"string",
                  "title":"Category Primary",
                  "description":"The primary category of the place"
               },
               "category_alternates":{
                  "items":{
                     "type":"string"
                  },
                  "type":"array",
                  "title":"Category Alternates",
                  "description":"The alternate categories of the place"
               },
               "phone_number":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Phone Number",
                  "description":"The phone number of the place"
               },
               "website":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Website",
                  "description":"The website of the place"
               },
               "open_status":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Open Status",
                  "description":"The open status of the place"
               },
               "distance_m":{
                  "anyOf":[
                     {
                        "type":"number"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Distance M",
                  "description":"Distance in meters from search point"
               }
            },
            "type":"object",
            "required":[
               "place_id",
               "name",
               "full_address",
               "latitude",
               "longitude",
               "category_primary"
            ],
            "title":"FindPlaceItem",
            "description":"A found place (using same schema as PlacematchFeatureProperties)."
         },
         "find_places__service__FindPlacesResponse":{
            "properties":{
               "results":{
                  "items":{
                     "$ref":"#/components/schemas/find_places__service__FindPlaceItem"
                  },
                  "type":"array",
                  "title":"Results",
                  "description":"Array of found places"
               },
               "metadata":{
                  "$ref":"#/components/schemas/FindPlacesMetadata",
                  "description":"Metadata about the find places operation"
               }
            },
            "type":"object",
            "required":[
               "results"
            ],
            "title":"FindPlacesResponse",
            "description":"Response model for find_places endpoint."
         },
         "routers__find_places_service__FindPlaceItem":{
            "properties":{
               "name":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Name"
               },
               "address":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Address"
               },
               "category":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Category"
               },
               "categories":{
                  "anyOf":[
                     {
                        "items":{
                           "type":"string"
                        },
                        "type":"array"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Categories"
               },
               "website":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Website"
               },
               "phone":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Phone"
               },
               "id":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Id"
               },
               "latitude":{
                  "anyOf":[
                     {
                        "type":"number"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Latitude"
               },
               "longitude":{
                  "anyOf":[
                     {
                        "type":"number"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Longitude"
               },
               "address_locality":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Address Locality"
               },
               "address_state":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Address State"
               },
               "address_postcode":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Address Postcode"
               },
               "address_country":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Address Country"
               },
               "address_street":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Address Street"
               },
               "address_housenumber":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Address Housenumber"
               },
               "open_status":{
                  "anyOf":[
                     {
                        "type":"string"
                     },
                     {
                        "type":"null"
                     }
                  ],
                  "title":"Open Status"
               }
            },
            "type":"object",
            "title":"FindPlaceItem",
            "description":"A found place (using same schema as PlacematchFeatureProperties)."
         },
         "routers__find_places_service__FindPlacesResponse":{
            "properties":{
               "places":{
                  "items":{
                     "$ref":"#/components/schemas/routers__find_places_service__FindPlaceItem"
                  },
                  "type":"array",
                  "title":"Places",
                  "description":"Array of found places"
               }
            },
            "type":"object",
            "required":[
               "places"
            ],
            "title":"FindPlacesResponse",
            "description":"Response model for find_places endpoint."
         }
      },
      "securitySchemes":{
         "HTTPBearer":{
            "type":"http",
            "scheme":"bearer"
         }
      }
   },
   "tags":[
      {
         "name":"v2-enrichment",
         "description":"V2 enrichment endpoints"
      },
      {
         "name":"find-places",
         "description":"Find places endpoints"
      }
   ]
}